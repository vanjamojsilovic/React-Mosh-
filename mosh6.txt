index.js

import React from 'react';
import ReactDOM from 'react-dom/client';
import './index.css';
import App from './App';
import reportWebVitals from './reportWebVitals';
import 'bootstrap/dist/css/bootstrap.css';
import Counters from './components/counters';

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  <React.StrictMode>
    <Counters />
  </React.StrictMode>
);

// If you want to start measuring performance in your app, pass a function
// to log results (for example: reportWebVitals(console.log))
// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals
reportWebVitals();

**************************************
counter.jsx


import React, { Component } from 'react';

class Counter extends Component {
    
        

    

    formatCount(){
        const {value: count} = this.props.counter;
        return count === 0 ? "Zero " : count;
    }
     
    

    render() { 
       

        return (<div>
                    
                    <h4>{this.props.counter.id}</h4>
                    <span  className={this.getBadgdeClasses()} >{this.formatCount()}</span>
                    
                    <button className='btn btn-secondary btn-sm' 
                        onClick={() => this.props.onIncrement(this.props.counter)} 
                        >Increment
                    </button>
                    <button onClick={() => this.props.onDelete(this.props.counter.id)} className='button.btn btn-danger btn-sm m-2'>Delete</button>
                </div>
                );
    }

    getBadgdeClasses() {
        let classes = " badge m-2 bg-";
        classes += (this.props.counter.value === 0) ? "warning " : "primary ";
        return classes;
    }

    
}


 
export default Counter;


******************************************
counters.jsx

import React, { Component } from 'react';
import Counter from './counter';


class Counters extends Component {
    state = { 
        counters: [
            {id: 1, value: 0},
            {id: 2, value: 0},
            {id: 3, value: 5},
            {id: 4, value: 0},
        ]

    };

    handleIncrement = counter => {
        const counters = [...this.state.counters];
        const index = counters.indexOf(counter);
        counters[index]={ ...counter };
        counters[index].value++;
        this.setState({ counters });
    };

    handleReset = () => {
        const counters = this.state.counters.map(c => {
            c.value = 0;
            return c;
        })
        this.setState({ counters });
    };
    
    handleDelete = (counterId) => {
        const counters = this.state.counters.filter(c => c.id !== counterId);
        this.setState({counters});
    };    
    
    render() { 
        return (
            <div>
                <button 
                    className='btn btn-primary btn-sm m-2'
                    onClick={this.handleReset}
                    >Reset
                </button>
                {this.state.counters.map(counter => 
                    <Counter 
                        key={counter.id} 
                        onDelete={this.handleDelete}
                        onIncrement={this.handleIncrement}
                        counter={counter} 
                    > 
                        <h4>Counter #{counter.id}</h4>
                    </Counter>)
                }
            </div>);
    }
}
 
export default Counters;